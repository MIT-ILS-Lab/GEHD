solver:
  run: "train"

  # logging and processing
  logdir: "main_model/logs/decoder"
  max_epoch: 40
  test_every_epoch: 1
  save_every_epoch: 5
  log_per_iter: 1

  # optimizer
  type: "adamw"
  weight_decay: 0.01  # default value of adamw
  lr: 0.00025
  # lr: 1.0e-4

  # scheduler
  # lr_type: "knee"
  # warmup_steps: 1

  lr_type: "poly"
  lr_power: 0.9


  # gradient accumulation
  accumulation_steps: 1

  # others
  progress_bar: true
  rand_seed: 22
  empty_cache: true
  ckpt: null
  clip_grad: 0.0

  # wandb
  wandb:
    project_name: "decoder"

data:
  train:
    mode: "train"

    # data loading
    batch_size: 16
    num_workers: 4
    episodes: 1000    # -1 means all

    shuffle: true

    # environment
    env:
      data_path: "main_model/disk/problems/city_20/problems_20_train.h5"
      sub_path: true

    # others
    disable: false

  test:
    mode: "test"

    # data loading
    batch_size: 8
    num_workers: 4
    episodes: 100    # -1 means all

    shuffle: false

    # environment
    env:
      data_path: "main_model/disk/problems/city_20/problems_20_test.h5"
      sub_path: false

    # others
    disable: false

model:
  embedding_dim: 128
  decoder_layer_num: 6
  city_size: 21
  head_num: 8
  hidden_dim: 512

  pretrained_encoder:
    in_channels: 6
    hidden_channels: 256
    out_channels: 32
    ckp_path: "main_model/logs/encoder_32/checkpoints/08000.solver.tar"
    mesh_path: "main_model/disk/meshes/sphere.obj"
