solver:
  run: train

  # logging and processing
  logdir: main_model/logs/encoder_64
  max_epoch: 10000
  test_every_epoch: 20
  save_every_epoch: 100
  log_per_iter: 10

  # optimizer
  type: adamw
  weight_decay: 0.01  # default value of adamw
  lr: 0.00025

  # learning rate
  lr_type: poly
  lr_power: 0.9

  # gradient accumulation
  accumulation_steps: 32 # gradient accumulation

  # others
  progress_bar: True
  rand_seed: -1 # fix the random seed if bigger than 0
  empty_cache: True # empty the cache periodically
  ckpt: "" # which checkpoint to load, None means no checkpoint
  clip_grad: -1.0  # clip gradient norm (-1: disable)

  # wandb
  wandb:
    project_name: "encoder_64"
    run_name: "my_encoder_run_64"

data:
  preparation:
    # paths to the different meshes
    path_to_mesh: main_model/disk/meshes/
    path_to_output_npz: main_model/disk/npz/
    path_to_output_filelist: main_model/disk/filelist/

    # variables for splitting and distance generation
    split_ratio: 0.8
    num_train_sources: 300
    num_train_targets_per_source: 800
    num_test_sources: 400
    num_test_targets_per_source: 60

    # variables for filtering and running
    file_size_threshold: 12_048_576 # threshold to filter out large meshes
    threads: 1

  train:
    # data augmentations
    distort: True
    angle: [10, 10, 10]
    scale: 0
    jitter: 0.1

    # data loading
    location: ./
    filelist: main_model/disk/filelist/filelist_train.txt
    batch_size: 1
    shuffle: True
    num_workers: 0

    # others
    disable: False # wether or not to disable the training set
    take: -1  # number of samples used for training

  test:
    # data augmentations
    distort: False
    angle: [10, 10, 10]
    scale: 0
    jitter: 0.1

    # data loading
    location: ./
    filelist: main_model/disk/filelist/filelist_test.txt
    batch_size: 4
    shuffle: True
    num_workers: 0

    # others
    disable: False # wether or not to disable the test set
    take: -1  # Number of samples used for testing

model:
  name: unet

  in_channels: 6          # input dimension of each vertices
  hidden_channels: 256    # hidden dimensions of the vertices
  out_channels: 64         # the final embedding dimension of each vertices

  conv_type: my # SAGE or my
  include_distance: True      # only appliable when use dist conv. if true, the distance between points will be concated to the feature.

  normal_aware_pooling: True  # when grid pooling, consider normal or not

  # visualization, will not affect the training/testing process, only visualization
  get_test_stat: False         # if true, evaluate the test set before visualization
  output_dir: main_model/out/
